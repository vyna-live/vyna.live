import { EndCallButton } from "@/components/end-call-button";
import Loader from "@/components/loader";
import { ToggleDropdown } from "@/components/toggle-view-dropdown";
import { cn } from "@/lib/utils";
import {
  CallControls,
  CallingState,
  CallParticipantsList,
  CallStatsButton,
  LivestreamLayout,
  PaginatedGridLayout,
  SpeakerLayout,
  useCallStateHooks,
} from "@stream-io/video-react-sdk";
import { Users } from "lucide-react";
import { useSearchParams } from "next/navigation";
import React, { useState } from "react";

type CallLayoutType = "grid" | "speaker-left" | "speaker-right";
const StreamingRoom = () => {
  const searchParams = useSearchParams();
  const isPersonalRoom = !!searchParams.get("personal");
  const [layout, setLayout] = useState("speaker-left");
  const [showParticipant, setShowParticipant] = useState(false);
  const { useCallCallingState } = useCallStateHooks();
  const callingState = useCallCallingState();
  if (callingState != CallingState.JOINED) return <Loader />;
  const CallLayout = () => {
    switch (layout) {
      case "grid":
        return <PaginatedGridLayout />;
      case "speaker-right":
        return <SpeakerLayout participantsBarPosition="right" />;

      default:
        return <SpeakerLayout participantsBarPosition="left" />;
    }
  };
  return (
    <section className="relative  h-screen w-full overflow-hidden p-6 text-white">
      <div className="relative  flex size-full">
        <div className="flex size-full  max-w-[1000px] items-center">
          <LivestreamLayout
            showLiveBadge={false}
            showDuration={false}
            mirrorLocalParticipantVideo={false}
          />
        </div>

        <div
          className={cn("ml-2 glassmorphism bg-blue w-full rounded-lg")}
        ></div>
      </div>

      <div className="fixed bottom-3 flex flex-wrap max-w-[900px] size-full items-end justify-center gap-5 ">
        <CallControls />
        {/* <ToggleDropdown onSelect={() => setLayout} />
        <CallStatsButton />
        <button onClick={() => setShowParticipant((prev) => !prev)}>
          <div className="cursor-pointer rounded-2xl bg-[#19232d] px-4 py-2 hover:bg-[#4c535b]">
            <Users size={20} className="text-white" />
          </div>
        </button> */}
        {/* {!isPersonalRoom && <EndCallButton />} */}
      </div>
    </section>
  
  );
};

export default StreamingRoom;
