Implement QR Code for Mobile Wallet Connection and Subscription Payments
Context
The app correctly connects to Phantom and Solflare wallets on desktop. I need to add a QR code feature to the existing wallet connection modal so mobile users can easily connect by scanning a code. Additionally, users should be able to pay for subscriptions using this same QR code method.
Requirements
1.Add a QR code to the existing wallet connection modal that already works for web connections
2.The QR code should allow users to connect their Phantom or Solflare mobile wallets
3.Implement subscription payment functionality through the same QR code system
4.Maintain the current styling theme and ensure the design is modern and intuitive
5.Implement the full connection flow (QR generation, mobile deep linking, connection verification)
6.Implement the full payment flow (transaction creation, payment verification, subscription activation)
7.The solution should work seamlessly alongside the existing wallet connection methods
Technical Specifications
Wallet Connection
Add a tab or section within the existing wallet connection modal to display the QR code
Use clear visual hierarchy to show both options (direct connect and QR code)
Provide short, clear instructions for users on how to scan the code
Match styling to the current application theme (colors, fonts, border-radius, etc.)
Show loading states when waiting for mobile connection
Display success feedback once connected
Subscription Payment
Create a seamless transition from wallet connection to subscription payment
Include clear subscription plan options with pricing information
Display subscription benefits and features for each tier
Show payment QR code with transaction details embedded
Include payment confirmation details after successful transaction
Display subscription status and expiration information
Provide option to manage or change subscription
Create clear visual feedback for payment processing steps
Add a tab or section within the existing wallet connection modal to display the QR code
Use clear visual hierarchy to show both options (direct connect and QR code)
Create a seamless transition from wallet connection to subscription payment
Include clear subscription plan options with pricing information
Provide short, clear instructions for users on how to scan the code
Match styling to the current application theme (colors, fonts, border-radius, etc.)
Show loading states when waiting for mobile connection or payment confirmation
Display success feedback once connected and payment is completed
Include payment confirmation details after successful transaction
Wallet Connection Implementation
Generate a unique session ID for each QR code display
Create deep links compatible with both Phantom and Solflare mobile apps
Set up polling mechanism to check connection status
Implement proper error handling and timeout for incomplete connections
Create necessary backend endpoints for connection verification
Ensure proper handling of the redirect after mobile wallet approval
Payment Implementation
Implement Solana transaction creation for subscription payments
Support multiple subscription plans/tiers with different prices
Create payment verification mechanism to confirm successful transactions
Update user subscription status after successful payment
Implement proper error handling and timeout for incomplete payments
Create necessary backend endpoints for payment processing
Store transaction signatures for payment verification and record-keeping
Support subscription renewals and upgrades/downgrades
Implement subscription expiration and grace period handling
Integration Points
1.Modify the existing wallet connection modal component
2.Add QR code generation and display logic
3.Create backend endpoints for connection verification and payment processing
4.Implement subscription plan selection UI
5.Add payment transaction creation and verification
6.Implement callback handling for mobile redirects
7.Create subscription status tracking and management
Code Structure
Please provide:
1.Frontend component modifications to add QR code to existing modal
2.Subscription plan selection UI components
3.Payment transaction creation logic
4.Backend API endpoints for connection verification and payment processing
5.Callback handler for mobile wallet redirects
6.Subscription status tracking and management system
7.Any additional utility functions needed
Constraints
The solution must work with the existing Solana wallet adapter implementation
Maintain all current functionality for desktop wallet connections
Mobile detection should be handled automatically
Connection state should be synchronized between QR and direct connection methods
Support multiple subscription plan options with different price points
Store payment transaction history and subscription status
Implement proper validation to prevent payment errors
Handle network failures gracefully with user-friendly error messages
Ensure security of payment transactions with proper encryption and verification
Example User Flow
Wallet Connection Flow
1.User clicks "Connect Wallet" button
2.Existing wallet connection modal appears
3.Modal now includes option to "Scan with Mobile Wallet" (tab, toggle, or section)
4.QR code is displayed when this option is selected
5.User scans code with Phantom or Solflare mobile app
6.Wallet app opens and prompts for connection approval
7.User approves connection in mobile app
8.Web application detects successful connection
9.Modal closes and user's wallet is connected
Subscription Payment Flow
1.User navigates to subscription section or is prompted to subscribe
2.User selects desired subscription plan/tier
3.Payment modal appears with subscription details and total amount
4.Modal includes QR code for mobile payment
5.User scans QR code with their already-connected wallet app
6.Wallet app shows transaction details including amount and recipient
7.User approves the payment transaction
8.Web application verifies the transaction on the blockchain
9.User receives confirmation of successful payment
10.User's subscription status is updated in the system
11.User is granted access to subscription features/content
Please provide a clean implementation that integrates seamlessly with my existing codebase while following best practices for Solana dApp development and subscription payment processing.
