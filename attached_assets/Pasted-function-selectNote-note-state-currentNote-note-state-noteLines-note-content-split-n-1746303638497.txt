function selectNote(note) {
  state.currentNote = note;
  state.noteLines = note.content.split('\n');
  renderNotepadTab();
}

function createNewNote() {
  state.currentNote = { id: null, title: '', content: '' };
  state.noteLines = [];
  renderNotepadTab();
}

function backToNotesList() {
  state.currentNote = null;
  state.noteLines = [];
  renderNotepadTab();
}

function addNoteLine() {
  const noteInput = notepadContent.querySelector('#noteInput');
  const line = noteInput.value.trim();
  
  if (!line) return;
  
  // Add line to state
  state.noteLines.push(line);
  
  // Clear input
  noteInput.value = '';
  
  // Update UI
  const paragraphsContainer = notepadContent.querySelector('#noteParagraphs');
  renderNoteParagraphs(paragraphsContainer);
}

async function saveNote() {
  if (state.noteLines.length === 0) return;
  
  const content = state.noteLines.join('\n');
  const title = state.noteLines[0].substring(0, 50) + (state.noteLines[0].length > 50 ? '...' : '');
  
  try {
    const saveButton = notepadContent.querySelector('#saveNoteButton');
    saveButton.disabled = true;
    saveButton.textContent = 'Saving...';
    
    // Save note
    let response;
    if (state.currentNote && state.currentNote.id) {
      // Update existing note
      response = await chrome.runtime.sendMessage({
        type: 'API_REQUEST',
        data: {
          endpoint: `/api/notepads/${state.currentNote.id}`,
          method: 'PUT',
          data: {
            hostId: state.user.id,
            title,
            content
          }
        }
      });
    } else {
      // Create new note
      response = await chrome.runtime.sendMessage({
        type: 'API_REQUEST',
        data: {
          endpoint: '/api/notepads',
          method: 'POST',
          data: {
            hostId: state.user.id,
            title,
            content
          }
        }
      });
    }
    
    if (response.success) {
      // Refresh notes
      const notesResponse = await chrome.runtime.sendMessage({
        type: 'API_REQUEST',
        data: {
          endpoint: `/api/notepads/${state.user.id}`,
          method: 'GET'
        }
      });
      
      if (notesResponse.success) {
        state.notes = notesResponse.data;
      }
      
      // Go back to notes list
      state.currentNote = null;
      state.noteLines = [];
      renderNotepadTab();
    }
  } catch (error) {
    console.error('Error saving note:', error);
  } finally {
    const saveButton = notepadContent.querySelector('#saveNoteButton');
    if (saveButton) {
      saveButton.disabled = false;
      saveButton.textContent = 'Save';
    }
  }
}
