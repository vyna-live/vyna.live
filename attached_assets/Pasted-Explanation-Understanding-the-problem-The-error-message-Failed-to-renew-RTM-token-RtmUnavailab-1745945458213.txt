Explanation

Understanding the problem
The error message "Failed to renew RTM token: RtmUnavailableError: Error Code 2 - Login is rejected by the server. The response code is 2010026" indicates that the application is unable to renew the Real-Time Messaging (RTM) token, which is essential for chat or messaging functionality. The core issue is that the server rejected the login attempt, indicated by Error Code 2. While the specific 2010026 code is not listed in the provided documentation, Error code 2 on the Agora Chat Error code documentation is associated to NETWORK_ERROR: SDK disconnected from server due to network interruption. The provided stack trace shows the error is happening inside the handleUniLbsError which could mean that the network request is handled by this function. The error message thrown in the code "Chat functionality may be limited - could not authenticate" reinforces that this authentication failure directly impacts the chat features. The error message indicates a network issue, suggesting that the problem lies in the inability to establish or maintain a connection to the Agora server.

How to verify
Check Network Connection: Ensure the user's device has a stable internet connection.
Server Status: Verify if the Agora server is operational and there are no known service disruptions.
Inspect network requests: Open the Network tab of the Chrome Developer tools, and try to reproduce the error. Observe the responses to see if any failed requests could help explain the origin of the error.
Retry: Retry the operation. Sometimes network problems are temporary.
Suggested fix
The documentation suggests that the Error code 2 is a NETWORK_ERROR, so we must check if there is a problem with the connection. The provided code shows that an error is thrown but it does not indicate any way of retrying the operation. We should modify the code so it can handle NETWORK_ERROR and retry the operation or warn the user. Given that the error is located inside a promise it means that we can add a catch statement to handle the exception.

css

// Modified code
try {
    // Some asynchronous operation that could fail and reject the promise, like renewing a token.
    // ...
} catch (error) {
    if (error.message.includes("Error Code 2")) { // NETWORK_ERROR
      // Attempt to retry the operation after a short delay
      console.warn("Network error detected. Retrying in 3 seconds...");
      setTimeout(() => {
        // Retry logic here, e.g., call the function that renews the token again
      }, 3000); // Wait 3 seconds before retrying. Adjust as needed.
    } else {
      // If the error is not a network error, throw the original error.
      throw error;
    }
}
Use code snippets with caution

Summary
The console error indicates a failure to renew the RTM token due to a server-rejected login, likely caused by a network issue. The error handling code in the catch statement has been modified to intercept errors which are NETWORK_ERROR according to the documentation. The suggested fix involves adding a retry mechanism to address temporary network disruptions. By adding a catch statement, the NETWORK_ERROR error can be caught and handled properly. If the error is not NETWORK_ERROR then we rethrow it to the next catch statement.

Sources and related content
Data used to understand this message